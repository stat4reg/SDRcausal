% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imp2.var.R
\name{imp2.var}
\alias{imp2.var}
\title{Estimates IMP2 variance}
\usage{
imp2.var(
  x,
  y,
  treated,
  imp,
  ipw,
  bandwidth_scale1,
  bandwidth_scale0,
  kernel = "EPAN",
  explicit_bandwidth = TRUE,
  gauss_cutoff = 0.001
)
}
\arguments{
\item{x}{Covariate matrix}

\item{y}{Response vector}

\item{treated}{Binary vetor indicating treatment}

\item{imp}{imp_output object from imp.ate()}

\item{ipw}{ipw_output object from ipw.ate()}

\item{bandwidth_scale1}{Scaling of the calculated bandwidth, or in case
explicit_bandwidth the actual bandwidth. For m1
and beta1.}

\item{bandwidth_scale0}{See bandwidth_scale1. For m0 and beta0.}

\item{kernel}{Specifies which kernel function to be used}

\item{explicit_bandwidth}{Specifies if bandwidth_scale will be used as the
bandwidth or if it will be calculated as bw =
bandwidth_scale * sd(x * beta) * n^(1/3).}

\item{gauss_cutoff}{Cutoff value for Gaussian kernel}
}
\value{
Variance of IMP
}
\description{
Variance of IMP2 as in Ghosh, Ma, & De Luna (2020).
}
\examples{
# Using example data from package SDRcausal
library(SDRcausal)

# Import example data
x <- SDRcausal::covariates
y <- SDRcausal::outcomes
trt <- SDRcausal::treated
b1 <- SDRcausal::beta1_guess
b0 <- SDRcausal::beta0_guess
alp <- SDRcausal::alpha_guess

# Perform semiparametric imputation
imp <- SDRcausal::imp.ate(x, y, trt, b1, b0,
           explicit_bandwidth = TRUE, bwc_dim_red1 = 1, bwc_impute1 = 1,
           bwc_dim_red0 = 1, bwc_impute0 = 1)

# Perform semiparametric inverse probability weighting
ipw <- SDRcausal::ipw.ate(x, y, trt, alp, bwc_dim_red = 10,
           bwc_prop_score = 18)

# Calculate the variance of the Augmented IPW (AIPW)
var <- SDRcausal::imp2.var(x, y, trt, imp, ipw,
           bandwidth_scale1 = imp$bw1, bandwidth_scale0 = imp$bw0)

}
\references{
Ghosh, T., Ma, Y., & De Luna, X. (2020). Sufficient dimension
reduction for feasible and robust estimation of average causal effect.
Statistica Sinica, accepted.
}
