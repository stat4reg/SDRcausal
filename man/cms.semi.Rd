% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cms.semi.R
\name{cms.semi}
\alias{cms.semi}
\title{Estimates the Central Mean Space (CMS)}
\usage{
cms.semi(
  x,
  y,
  treated,
  beta_initial,
  solver = "optim",
  kernel = "EPAN",
  explicit_bandwidth = FALSE,
  bandwidth_scale = 1,
  gauss_cutoff = 0.001,
  penalty = 10,
  n_before_pen = 1,
  root_tol = 0.001,
  n_threads = 1,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{x}{Covariate matrix}

\item{y}{Response vector}

\item{treated}{Binary vetor indicating treatment}

\item{beta_initial}{Initial guess of CMS}

\item{solver}{Specifies which solver to be used. Current options
optim and cobyla (from nloptr package).}

\item{kernel}{Specifies which kernel function to be used,
current options are: "EPAN", "QUARTIC", and
"GAUSSIAN".}

\item{explicit_bandwidth}{Specifies if bandwidth_scale will be used as the
bandwidth or if it will be calculated as
bw = bandwidth_scale * sd(x * beta) * n^(1/5)}

\item{bandwidth_scale}{Scaling of the bandwidth or the actual bandwidth
if explicit bandwidth.}

\item{gauss_cutoff}{cutoff value for Gaussian kernel}

\item{penalty}{Penalty for the optimizer if local linear
regression fails. Added to the function value in
solver as: penalty^(n - n_before_pen), where n is
the number of llr fails.}

\item{n_before_pen}{Number of probabilities outside the range (0, 1)
to accept during dimension reduction.}

\item{root_tol}{Tolerance which makes the program warn if optim
stops at at a value higher than root_tol.}

\item{n_threads}{Sets number of threads for parallel run. Set to 0
serial. If n_threads exceeds maximum number of
threads, sets n_threads to max_threads - 1. To use
max_threads, set to n_threads to max_threads of
system.}

\item{verbose}{Specifies if the program should print output while
running.}

\item{...}{Additional parameters passed to optim.}
}
\value{
A list containing the final beta, the bandwidth used, a warning
        if optim does not converge or converges to a value that is larger
        than root_tol, and the output of optim.
}
\description{
Semiparametric estimation of the Central Mean Space (CMS) as in
             Ghosh, Ma, & De Luna (2020). To be used with
             SDRcausal::imp.val().
}
\examples{
# Using example data from package SDRcausal
library(SDRcausal)

# Import example data
x <- SDRcausal::covariates
y <- SDRcausal::outcomes
trt1 <- SDRcausal::treated
trt0 <- rep(1, length(trt1)) - trt1
b1 <- SDRcausal::beta1_guess
b0 <- SDRcausal::beta0_guess

# Perform semiparametric dimension reduction for treated
cms1 <- SDRcausal::cms.semi(x, y, trt1, b1,
           explicit_bandwidth = TRUE, bandwidth_scale = 1)

# Perform semiparametric dimension reduction for untreated
cms0 <- SDRcausal::cms.semi(x, y, trt0, b0,
           explicit_bandwidth = TRUE, bandwidth_scale = 1)

}
\references{
Ghosh, T., Ma, Y., & De Luna, X. (2020). Sufficient dimension
reduction for feasible and robust estimation of average causal effect.
Statistica Sinica, accepted.
}
\seealso{
[stats::optim]
}
